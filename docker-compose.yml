version: '3.8'
services:
  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ambientese
    volumes:
      - mysql-data:/var/lib/mysql

  app:
    build: .
    container_name: spring_app
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: grupo5
      JWT_SECRET: GCJrc9*tnU(Y73E@SD&VIHqN  # Defina isso conforme necessário
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/ambientese?createDatabaseIfNotExist=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EMAIL: your_email@example.com  # Defina isso conforme necessário
      EMAIL_HOST: smtp.example.com  # Defina isso conforme necessário
      EMAIL_PORT: 587  # Defina isso conforme necessário
      EMAIL_APP_PASSWORD: your_email_app_password  # Defina isso conforme necessário
    depends_on:
      - db

  jaeger-api:
    image: jaegertracing/opentelemetry-all-in-one
    container_name: jaeger-api
    ports:
      - 16686:16686
    depends_on:
      - collector-api

  collector-api:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: collector-api
    volumes:
      - ./collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    ports:
      - 4317:4317
      - 4318:4318
      - 8889:8889

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector-api

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./grafana/grafana-data-sources.yml:/etc/grafana/provisioning/data-sources/data-sources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  mysql-data:
